package eu.csaware.stix2.sdos;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import eu.csaware.stix2.common.Bundle;
import eu.csaware.stix2.common.LocalDateTimeTypeAdapter;
import eu.csaware.stix2.util.TestUtil;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.URL;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDateTime;

import static org.junit.Assert.*;

public class VulnerabilityTest {

    String jsonString;
    Vulnerability testVulnerability;

    @Before
    public void setUp() throws Exception {
        jsonString = TestUtil.readResourceFile("sdos/vulnerability.json");

        System.out.println("Vulnerability (json): " + jsonString);

        Gson gson = new GsonBuilder()
                .registerTypeAdapter(LocalDateTime.class, new LocalDateTimeTypeAdapter())
                .setPrettyPrinting()
                .create();

        testVulnerability = gson.fromJson(jsonString, Vulnerability.class);

        URL url = this.getClass().getResource("vulnerability.json");
        String path = url.getPath();
        String newPath = path.replace("vulnerability.json", "vulnerability:out.json");
        PrintWriter pw = new PrintWriter(newPath);
        if (pw != null) {
            System.out.println("writing to: " + newPath);
            pw.write(gson.toJson(testVulnerability));
            pw.close();
        } else {
            System.out.println("output not found: " + newPath);
        }
        System.out.println("vulnerability: " + gson.toJson(testVulnerability));


    }


    @After
    public void tearDown() throws Exception {
    }


    @Test
    public void getType() {
    }

//	@Test
//	public void setType() {
//	}
//
//	@Test
//	public void getId() {
//	}
//
//	@Test
//	public void getxDaThreatGroup() {
//	}
}